`(,@(progn (push path callstack) nil)
  (header nil
    ,@(unless homep
        `((nav ((class . "nav-extended top-nav"))
            (div ((class . "container"))
              (div ((class . "nav-wrapper"))
                (span ((class . "brand-logo"))
                  (a ((href . ,root-url)) "leaf-browser.el"))
                ;; (div ((class . "nav-content"))
                ;;   ,@(cond
                ;;      (editorp (seml-import ".header-editor.seml"))))
                (a ((class . "top-nav sidenav-trigger full hide-on-large-only")
                    (href . "#") (data-target . "sidenav"))
                  (i ((class . "material-icons")) "menu")))
              ,@(when split-path
                  `((div ((class . "nav-content"))
                      ,@(let ((url ""))
                          (mapcar (lambda (elm)
                                    (setq url (concat url "/" elm))
                                  `(a ((href . ,url)
                                       (class . "breadcrumb"))
                                     ,elm))
                                split-path)))))))))
    ,@(seml-import ".sidenav.seml")))
