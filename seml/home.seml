(let ((root-dir      lbrowser-root-dir)
      (seml-dir      (concat lbrowser-root-dir "seml/"))
      (import-fn     (lambda (path)
                       (eval (read
                              (with-temp-buffer
                                (insert-file-contents (concat seml-dir path))
                                (buffer-string))))))
      (url-encode-fn (lambda (str)
                       (url-hexify-string str)))
      (url-decode-fn (lambda (str)
                       (url-unhex-string (decode-coding-string str 'uft-8))))
      (homep         (not targetpath))
      (editorp       (not (not targetpath))))
  `(html nil
     ,@(funcall import-fn ".head.seml")
     (body nil
       ,@(funcall import-fn ".header.seml")
       ,@(funcall import-fn ".main.seml")
       ,@(funcall import-fn ".slide-out.seml"))))
