`(,@(progn (push path callstack) nil)
  (div ((class . "sidenav sidenav-fixed"))
    (ul ((id . "sidenav"))
      (li ((class . "logo"))
        (a ((href . "/leaf-browser/home/"))
          (img ((width . "250px")
                (src . "/leaf-browser/sources/splash.svg")))))
      (li nil (div ((class . "divider"))))
      (li ((class . "no-padding"))
        (ul ((class . "collapsible collapsible-accordion"))
          ,@(mapcar
             (lambda (x)
               (let ((child-fn (lambda (y)
                                 (let ((symbol (car y))
                                       (type   (cadr y)))
                                   (when (eq type 'custom-group)
                                     `(li nil (a ((href . "#!"))
                                                ,(symbol-name symbol)))))))
                     (symbol   (car x))
                     (type     (cadr x)))
                 (if (eq type 'custom-group)
                     `(li nil
                        (a ((class . "collapsible-header waves-effect"))
                          ,(symbol-name symbol))
                        (div ((class . "collapsible-body"))
                          (ul nil
                            ,@(mapcar child-fn (get symbol 'custom-group))))))))
             (get 'emacs 'custom-group))))))
  (div ((class . "patreon"))
    (a ((href . "https://www.patreon.com/conao3")) "Become a Patreon")))
