`(,@(progn (push path callstack) nil)
  ,@(progn (push '(:id header :disp "Header") toc)
           (push '(:id current-leaf :disp "Current Leaf Configuration") toc)
           (push '(:id custom-variables :disp "Custom Variables") toc) nil)
  (div ((id . "header") (class . "section scrollspy"))
    (h2 nil ,var1)
    (p ((class . "caption")) ,(get groupsym 'group-documentation)))
  (div ((class . "row"))
    (div ((id . "current-leaf") (class . "section scrollspy"))
      (div ((class . "col s12"))
        (h4 nil "Current leaf configuration")
        ,(seml-htmlize 'emacs-lisp-mode "(leaf real-auto-save
  :ensure t
  :custom ((real-auto-save-interval . 0.3))
  :commands real-auto-save-mode
  :hook (find-file-hook . real-auto-save-mode))")))

    (div ((class . "col s12"))
      (div ((id . "custom-variables") (class . "section scrollspy"))
        (h4 nil "Custom Variables")
        (p ((class . "caption")) "Customizable variables tagged by package developer.")
        ,@(let ((variable-elms (mapcan (lambda (elm)
                                         (let ((sym  (car elm))
                                               (type (cadr elm)))
                                           (when (eq type 'custom-variable)
                                             `(,elm))))
                                       (get (intern var1) 'custom-group))))
            (if variable-elms
                (mapcar
                 (lambda (elm)
                   (let ((sym  (car  elm))
                         (type (cadr elm)))
                     `(div ((class . "row"))
                        (div ((class . "col s12"))
                          (h5 nil ,(symbol-name sym))
                          (p ((class . "caption"))
                            (div ((class . "doc"))
                              ,(seml-htmlize 'emacs-lisp-mode
                                             (or (when (stringp (get sym 'variable-documentation))
                                                   (get sym 'variable-documentation))
                                                 "No docstring..."))))
                          ))))
                 (sort variable-elms '(lambda (a b)
                                        (string< (symbol-name (car a))
                                                 (symbol-name (car b))))))
              `((li nil
                  (a nil "No Custom variables")))))))))

;; (div ((class . "row"))
;;   (div ((class . "col s12"))
;;     (h4 nil "Bind-key-column-widths")
;;     (p nil ,(get 'bind-key-column-widths 'variable-documentation)))
;;   (div ((class . "col s12 xl7"))
;;     (div ((class . "imput-field"))
;;       (select nil
;;         (option ((value . "1")) "item")
;;         (option ((value . "1")) "item")
;;         (option ((value . "1")) "item"))))
;;   (div ((class . "col s12 xl5"))
;;     (div ((class . "imput-field"))
;;       (select nil
;;         (option ((value . "1")) "item")
;;         (option ((value . "1")) "item")
;;         (option ((value . "1")) "item")))))
