`(,@(progn (push path callstack) nil)
  (ul ((class . "sidenav sidenav-fixed") (id . "sidenav"))
    (li ((class . "logo"))
      (a ((href . ,(funcall rellink-fn "/")))
        (img ((width . "250px")
              (src . "/leaf-browser/sources/splash.svg")))))
    (li ((class . "divider")))
    ,@(let ((group-elms (mapcan (lambda (elm)
                                  (let ((sym  (car elm))
                                        (type (cadr elm)))
                                    (when (eq type 'custom-group)
                                      `(,elm))))
                                (get (intern (or groupstr "emacs")) 'custom-group))))
        (if group-elms
            (mapcar
             (lambda (elm)
               (let ((sym  (car  elm))
                     (type (cadr elm)))
                 `(li nil
                    (a ((href  . ,(concat root-url "/group/" (symbol-name sym))))
                      ,(symbol-name sym)))))
             (sort group-elms '(lambda (a b)
                                 (string< (symbol-name (car a))
                                          (symbol-name (car b))))))
          `((li nil
              (a nil "No Child Groups..."))))))
  (div ((class . "patreon"))
    (a ((href . "https://www.patreon.com/conao3")) "Become a Patreon")))
