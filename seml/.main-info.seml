`(,@(progn (push path callstack) nil)
  ,@(progn (push '(:id custom-types :disp "Customization Types") toc)
           nil)
  (h2 nil "info")
  (div ((id . "custom-types") (class . "section scrollspy"))
    (h3 nil "Customization Types")
    (p ((class . "caption"))
      "leaf-browser.elではcustom-modeと同様の操作感を提供するように努力しています。"
      "そのため GNU Emacs Lisp Reference Manual 14.4 "
      (a ((target . "_brank") (href . "https://ayatakesi.github.io/lispref/24.5/elisp.html#Customization-Types"))
        "Customization Types")
      "より、custom-modeのマニュアルを引用します。")
    (p ((class . "caption"))
      "ある変数にどのcustomization typeが割り当てられているかは、ヘッダのdebugボタンを押すことで確認できます。")
    (div ((class . "section"))
      (h4 nil "UIでの変更を要求するタイプ")
      (h5 nil "boolean")
      (p ((class . "caption")) "値は真偽値 — nilかtです。choiceとconstを合わせて使用(次のセクションを参照)することにより、値がnilかtでなければならず、それぞれの値に固有の意味に適合する説明テキストを指定することもできます。")
      (h5 nil "integer")
      (p ((class . "caption")) "値は数(浮動小数点数または整数)でなければなりません。")
      (h5 nil "float")
      (p ((class . "caption")) "値は浮動小数点数でなければなりません。"))
    (div ((class . "section"))
      (h4 nil "パスを要求するタイプ")
      (h5 nil "file")
      (p ((class . "caption")) "値はファイル名でなければなりません。ウィジェットは補完を提供します。")
      (h5 nil "(file :must-match t)")
      (p ((class . "caption")) "値は既存のファイル名でなければなりません。ウィジェットは補完を提供します。")
      (h5 nil "directory")
      (p ((class . "caption")) "値はディレクトリー名でなければなりません。ウィジェットは補完を提供します。"))
    (div ((class . "section"))
      (h4 nil "補完を要求するタイプ")
      (h5 nil "function")
      (p ((class . "caption")) "値はラムダ式か関数名でなければなりません。ウィジェットは関数名にたいする補完を提供します。")
      (h5 nil "variable")
      (p ((class . "caption")) "値は変数名でなければなりません。ウィジェットは補完を提供します。")
      (h5 nil "hook")
      (p ((class . "caption")) "値は関数のリストでなければなりません。このカスタマイズ型はフック変数にたいして使用されます。フック内での使用を推奨される関数のリストを指定するために、フック変数のdefcustom内で:optionsキーワードを使用できます。Defining Customization Variablesを参照してください。")
      (h5 nil "symbol")
      (p ((class . "caption")) "値はシンボルでなければなりません。これはカスタマイズバッファー内でシンボル名として表示されます。ウィジェットは補完を提供します。")
      (h5 nil "coding-system")
      (p ((class . "caption")) "値はコーディングシステム名でなければならず、M-TABで保管することができます。")
      (h5 nil "face")
      (p ((class . "caption")) "値はフェイス名のシンボルでなければなりません。ウィジェットは補完を提供します。")
      (h5 nil "color")
      (p ((class . "caption")) "値は有効なカラー名でなければなりません。ウィジェットはカラー名にたいする補完と、同様に*Colors*バッファーに表示されるカラーサンプルとカラー名のリストからカラー名を選択するボタンを提供します。"))
    (div ((class . "section"))
      (h4 nil "自由記述フォームを要求するタイプ")
      (h5 nil "sexp")
      (p ((class . "caption")) "値はプリントおよび読み込むことができる任意のLispオブジェクトです。より特化した型の使用するために時間をとりたくない場合は、任意のオプションへのフォールバックとしてsexpを使用することができます。")
      (h5 nil "key-sequence")
      (p ((class . "caption")) "値はキーシーケンスです。カスタマイズバッファーは、kbd関数と同じ構文うぃ使用して、キーシーケンスを表示します。Key Sequencesを参照してください。")
      (h5 nil "string")
      (p ((class . "caption")) "値は文字列でなければなりません。カスタマイズバッファーはその文字列を区切り文字'\"'文字および\"'\"クォートなしで表示します。")
      (h5 nil "character")
      (p ((class . "caption")) "値は文字コードでなければなりません。文字コードは実際には整数ですが、この型は数字を表示せずに、バッファー内にその文字を挿入することにより値を表示します。")
      (h5 nil "regexp")
      (p ((class . "caption")) "string文字と同様ですが、その文字列は有効な正規表現でなければなりません。"))))
