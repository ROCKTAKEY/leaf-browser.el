`(,@(progn (push path callstack) nil)
  ,@(progn (push '(:id header :disp "Header") toc) nil)
  (div ((id . "header") (class . "section scrollspy"))
    (h2 ((class . "header")) ,var1))
  (div ((class . "row"))
    (div ((class . "col s12 m4"))
      ,@(let ((group-elms (mapcan (lambda (elm)
                                    (let ((sym  (car elm))
                                          (type (cadr elm)))
                                      (when (eq type 'custom-group)
                                        `(,elm))))
                                 (get (intern var1) 'custom-group))))
          (if group-elms
              `((h5 ((class . "light")) "Child groups")
                (ul ((class . "collection"))
                  ,@(mapcar (lambda (elm)
                              (let ((sym  (car elm))
                                    (type (cadr elm)))
                                (when (eq type 'custom-group)
                                  `(a ((class . "collection-item")) ,(symbol-name sym)))))
                            (get (intern var1) 'custom-group))))
            `((h5 ((class . "light")) "No child groups")))))
    (div ((class . "col s12 m8"))
      (ul ((class . "collection"))
        (a ((class . "collection-item")) "item")
        (a ((class . "collection-item")) "item")
        (a ((class . "collection-item")) "item")
        (a ((class . "collection-item")) "item")
        (a ((class . "collection-item")) "item")))))
