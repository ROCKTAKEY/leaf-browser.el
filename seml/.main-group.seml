`(,@(progn (push path callstack) nil)
  ,@(progn (push '(:id header :disp "Header") toc)
           (push '(:id current-leaf :disp "Current Leaf Configuration") toc)
           (push '(:id custom-variables :disp "Custom Variables") toc) nil)
  (div ((id . "header") (class . "section scrollspy"))
    (h2 nil ,var1)
    (p nil ,(get groupsym 'group-documentation)))
  (div ((class . "row"))
    (div ((id . "current-leaf") (class . "section scrollspy"))
      (div ((class . "col s12"))
        (h5 nil "Current leaf configuration")
        ,@(let ((source-buf (generate-new-buffer "*leaf*"))
               (htmlize-buf)
               (result))
           (with-current-buffer source-buf
             (insert "(leaf real-auto-save
  :ensure t
  :custom ((real-auto-save-interval . 0.3))
  :commands real-auto-save-mode
  :hook (find-file-hook . real-auto-save-mode))")
             (emacs-lisp-mode)
             (indent-region (point-min) (point-max)))
           (setq htmlize-buf (htmlize-buffer source-buf))
           (setq result (seml-encode-html-from-buffer htmlize-buf))
           (print source-buf)
           (print htmlize-buf)
           (kill-buffer source-buf)
           (kill-buffer htmlize-buf)
           (seml-xpath '(pre) result))))
    (div ((class . "col s12 xl8"))
      (div ((id . "custom-variables") (class . "section scrollspy"))
        (div ((class . "row"))
          (div ((class . "col s12"))
            (h4 nil "Bind-key-column-widths")
            (p nil ,(get 'bind-key-column-widths 'variable-documentation)))
          (div ((class . "col s12 xl7"))
            (div ((class . "imput-field"))
              (select nil
                (option ((value . "1")) "item")
                (option ((value . "1")) "item")
                (option ((value . "1")) "item"))))
          (div ((class . "col s12 xl5"))
            (div ((class . "imput-field"))
              (select nil
                (option ((value . "1")) "item")
                (option ((value . "1")) "item")
                (option ((value . "1")) "item")))))))))
